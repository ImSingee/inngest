package tracing

import (
	"github.com/inngest/inngest/pkg/execution/state"
	"go.opentelemetry.io/otel/attribute"
	"go.opentelemetry.io/otel/trace"
)

// DropSpan marks the span to be dropped.
func DropSpan(span trace.Span) {
	span.SetAttributes(attribute.Bool(AttributeDropSpan, true))
	span.End()
}

// ApplyResponseToSpan applies details from the given `DriverResponse` to the
// given span. This is used for adding additional details to the span after the
// exectution has completed.
func ApplyResponseToSpan(span trace.Span, resp *state.DriverResponse) {
	if resp.IsDiscoveryResponse() {
		// We ignore discovery responses and rely on other spans to show steps
		// generated by handling opcodes later on.
		span.SetAttributes(attribute.Bool(AttributeDropSpan, true))
		return
	}

	// TODO
}

func WithGeneratorAttrs(op state.GeneratorOpcode) trace.SpanStartEventOption {
	return trace.WithAttributes(
		attribute.String("inngest.op", op.Op.String()),
		attribute.String("inngest.step_id", op.ID),
		attribute.String("inngest.step_name", op.UserDefinedName()),
	)
}
